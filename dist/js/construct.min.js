require.config({
    waitSeconds: 200,
    baseUrl: "scripts/",
    paths: {
        bootstrap: "lib/bootstrap",
        "bootstrap-toolkit": "lib/bootstrap-toolkit",
        jquery: "lib/jquery",
        knockout: "lib/knockout-latest",
        "ko.mapping": "lib/knockout.mapping",
        moment: "lib/moment-with-locales",
        scrollto: "lib/jquery.scrollTo",
        select2: "lib/select2",
        "sticky-kit": "lib/sticky-kit",
        tether: "lib/tether",
        text: "lib/text"
    },
    shim: {
        bootstrap: {
            deps: [ "jquery", "tether" ]
        },
        "bootstrap-toolkit": {
            deps: [ "jquery" ]
        },
        "ko.mapping": {
            deps: [ "knockout" ]
        },
        scrollto: {
            deps: [ "jquery" ]
        },
        "sticky-kit": {
            deps: [ "jquery" ]
        }
    }
}), require([ "jquery", "knockout", "bootstrap", "bootstrap-toolkit", "scrollto", "sticky-kit" ], function($, ko, bootstrap) {
    function makeSticky() {
        $(".js-sticky").stick_in_parent({}), $(".js-sticky").on("sticky_kit:bottom", function(e) {
            $(this).parent().css("position", "static");
        }).on("sticky_kit:unbottom", function(e) {
            $(this).parent().css("position", "relative");
        });
    }
    $('a[href^="#"].js-scrollto').click(function(e) {
        e.preventDefault(), $(window).stop(!0).scrollTo(this.hash, {
            duration: 500,
            offset: {
                top: -50
            }
        });
    }), function(viewport) {
        viewport.is("xs"), viewport.is(">=md") && (makeSticky(), console.log("load sticky")), 
        viewport.is("<md"), $(window).resize(viewport.changed(function() {
            viewport.is(">=md") && (makeSticky(), $(document.body).trigger("sticky_kit:recalc"), 
            console.log("resize sticky")), viewport.is("<md") && ($(".js-sticky").trigger("sticky_kit:detach"), 
            console.log("detach sticky"));
        }));
    }(ResponsiveBootstrapToolkit), $.fn.setBgImage = function() {
        var articleImage = this.find("img"), articleImageSrc = articleImage.attr("src");
        articleImage.css("display", "none"), this.css("background-image", "url(" + articleImageSrc + ")");
    }, function($) {
        $(".bg-img-cover").each(function() {
            $(this).setBgImage();
        });
    }(jQuery), function($) {
        $.fn.collapseNext = function() {
            return this.each(function() {
                var trigger = $(this), target = trigger.next(".collapse-body"), isOpen = trigger.hasClass("active");
                trigger.toggleClass("active").attr("aria-expanded", !isOpen), target.toggleClass("active");
            });
        };
    }(jQuery), $("[data-toggle=collapse-next]").click(function() {
        $(this).collapseNext("hide");
    }), document.addEventListener("keydown", function(e) {
        e.ctrlKey && e.altKey && e.shiftKey && "KeyB" === e.code && $("body").toggleClass("show-breakpoint");
    });
});