require.config({
    waitSeconds: 200,
    baseUrl: "Scripts/",
    paths: {
        jquery: "lib/jquery",
        text: "lib/text",
        bootstrap: "lib/bootstrap",
        "bootstrap.select": "lib/bootstrap-select",
        moment: "lib/moment-with-locales",
        select2: "lib/select2",
        "bootstrap-toolkit": "lib/bootstrap-toolkit",
        scrollto: "lib/jquery.scrollTo",
        "sticky-kit": "lib/sticky-kit",
        tablesorter: "lib/jquery.tablesorter",
        knockout: "lib/knockout-latest",
        "ko.mapping": "lib/knockout.mapping",
        "jquery-ui/widget": "lib/jquery.ui.widget",
        iframetransport: "lib/jquery.iframe-transport",
        fileupload: "lib/jquery.fileupload",
        underscore: "lib/underscore",
        "ko.extentions": "app/knockout-extensions",
        utils: "app/utils"
    },
    shim: {
        bootstrap: {
            deps: [ "jquery" ]
        },
        "jqurey.widget": {
            deps: [ "jquery" ]
        },
        "bootstrap-toolkit": {
            deps: [ "jquery" ]
        },
        scrollto: {
            deps: [ "jquery" ]
        },
        "sticky-kit": {
            deps: [ "jquery" ]
        },
        "ko.extentions": {
            deps: [ "knockout", "jquery" ]
        },
        "ko.mapping": {
            deps: [ "knockout" ]
        },
        sbufConfig: {
            deps: [ "ko.extentions" ]
        },
        "viewmodels/users/usersViewModel": {
            deps: [ "bootstrap", "select2", "bootstrap.select", "tablesorter", "ko.extentions" ]
        },
        "viewmodels/theses/thesesSearchViewModel": {
            deps: [ "bootstrap", "select2", "bootstrap.select", "tablesorter", "ko.extentions" ]
        },
        "viewmodels/projectarea/dashboardViewModel": {
            deps: [ "bootstrap", "select2", "bootstrap.select", "tablesorter", "ko.extentions" ]
        },
        "viewmodels/projectarea/projectViewModel": {
            deps: [ "bootstrap", "select2", "bootstrap.select", "tablesorter", "ko.extentions" ]
        }
    }
}), require([ "jquery", "knockout", "moment", "sbufConfig", "tablesorter", "bootstrap", "bootstrap.select" ], function($, ko, moment, sbufConfig, tablesorter, bootstrap) {
    function readCookie(name) {
        for (var nameEQ = name + "=", ca = document.cookie.split(";"), i = 0; i < ca.length; i++) {
            for (var c = ca[i]; " " === c.charAt(0); ) c = c.substring(1, c.length);
            if (0 === c.indexOf(nameEQ)) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }
    moment.locale("sv"), $.ajaxSetup({
        beforeSend: function(xhr, settings) {
            if (0 === settings.url.indexOf(sbufConfig.settings.apiHost) && settings.url !== sbufConfig.settings.apiHost + "/oauth/token") {
                xhr.withCredentials = !0;
                var auth = readCookie("token");
                null !== auth && xhr.setRequestHeader("Authorization", "Bearer " + auth);
            }
        },
        crossDomain: !0
    });
    $(window).resize(function() {
        var off_canvas_nav_display = $(".off-canvas-navigation").css("display");
        $(".menu-button").css("display");
        "block" === off_canvas_nav_display && $("body").removeClass("three-column").addClass("small-screen"), 
        "none" === off_canvas_nav_display && $("body").removeClass("active-sidebar active-nav small-screen").addClass("three-column");
    }), $(document).on("click", function(e) {
        $("#add-tag").is(":hidden") || $("#add-tag").toggleClass("hide");
    }), $.QueryString = function(keys) {
        var values = {};
        if (0 === keys.length || keys.length > 0 && "" === keys[0]) return values;
        for (var i = 0; i < keys.length; ++i) {
            var pair = keys[i].split("=", 2);
            values[pair[0]] = decodeURIComponent(pair[1].replace(/\+/g, " "));
        }
        return values;
    }(window.location.search.substr(1).split("&"));
});