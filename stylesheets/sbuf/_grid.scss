// Grid system
// --------------------------------------------------

// Container widths
// Set the container width, and override it for fixed navbars in media queries.

.container {
    @include container-fixed;

    @media (min-width: $screen-sm-min) {
         width: auto; 
    }

    @media (min-width: $screen-md-min) {
         width: auto; 
    }

    @media (min-width: $screen-lg-min) {
         /*width: auto;*/ 
        /*width: $container-lg;*/
        max-width: 1500px;
    }
}

// Rough way of targeting mobile portrait breakpoint.
// Eg. <div class="col-xs-portrait col-xs-6">

.col-xs-portrait {
    @media (max-width: $screen-xs-min) {
        width: 100%;
    }
}

// Dev: Show grid
.show-grid [class^=col-] {
    padding-top: 10px;
    padding-bottom: 10px;
    background-color: rgba(86, 61, 124, 0.15);
    border: 1px solid rgba(86, 61, 124, 0.2);
}

// Dev: Breakpoint label
body:after {
    @include transition;
    content: 'Breakpoint: none';
    font-family: $font-family-sans-serif;
    font-weight: 700;
    font-size: 10px;
    text-transform: uppercase;
    color: #fff;
    padding: 5px 10px;
    position: fixed;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 10;
}

@media (min-width: $screen-xs-min) {
    body:after {
        content: 'Breakpoint: xs';
    }
}

@media (min-width: $screen-sm-min) {
    body:after {
        content: 'Breakpoint: sm';
    }
}

@media (min-width: $screen-md-min) {
    body:after {
        content: 'Breakpoint: md';
    }
}

@media (min-width: $screen-lg-min) {
    body:after {
        content: 'Breakpoint: lg';
    }
}

@media (min-width: $screen-xl-min) {
    body:after {
        content: 'Breakpoint: xl';
    }
}